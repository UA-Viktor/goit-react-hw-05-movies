{"version":3,"file":"static/js/357.a0ce253f.chunk.js","mappings":"+PAIaA,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6GAECC,EAAAA,EAAAA,sBAAgCT,GAFjC,OAEhBU,EAFgB,OAGtBN,EAAgBM,GAHM,gDAKtBJ,EAAS,6JALa,yDAAH,qDASvBE,GACD,GAAE,CAACR,IAEAK,GACK,yBAAMA,KAIb,iCACE,uCAAeL,KACdG,EAAaQ,OAAS,IAAK,uBAAIR,EAAa,GAAGS,YAGrD,C,mCC9BDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAqDVL,EAAY,CAChBM,qBApD2B,WAC3B,OAAOF,EAAAA,EAAAA,IACA,uBAAwB,CAC3BG,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAR,GAAQ,OAAIA,EAASS,KAAKC,OAAlB,GACjB,EA6CCC,aA3CmB,SAAAC,GACnB,OAAOT,EAAAA,EAAAA,IACA,gBAAiB,CACpBG,OAAQ,CACNC,QAASH,EACTQ,MAAOA,KAGVJ,MAAK,SAAAR,GAAQ,OAAIA,EAASS,KAAKC,OAAlB,GACjB,EAmCCG,eAjCqB,SAAAC,GACrB,OAAOX,EAAAA,EAAAA,IACA,UAAYW,EAAI,CACnBR,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAR,GAAQ,OAAIA,EAASS,IAAb,GACjB,EA0BCM,sBAxB4B,SAAAD,GAC5B,OAAOX,EAAAA,EAAAA,IACA,UAAYW,EAAK,WAAY,CAChCR,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAR,GAAQ,OAAIA,EAASS,KAAKO,IAAlB,GACjB,EAiBCC,sBAf4B,SAAAH,GAC5B,OAAOX,EAAAA,EAAAA,IACA,UAAYW,EAAK,WAAY,CAChCR,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAR,GAAQ,OAAIA,EAASS,KAAKC,OAAlB,GACjB,GAUD,K,sBChEA,SAASQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOhC,GAEP,YADA0B,EAAO1B,EAET,CACI+B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOnB,KAAKc,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/Reviews.js","services/movies-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesAPI from '../services/movies-api';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await moviesAPI.searchMoviesIDreviews(movieId);\n        setMovieReviews(response);\n      } catch (error) {\n        setError('Ошибка при получении отзывов');\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <>\n      <div>Reviews: {movieId}</div>\n      {movieReviews.length > 0 && <p>{movieReviews[0].content}</p>}\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09e88d7dd6157842e835fc31a8c547c7';\n\nconst searchMoviesTrending = () => {\n  return axios\n    .get('/trending/movie/week', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst searchMovies = query => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst searchMoviesID = id => {\n  return axios\n    .get('/movie/' + id, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data);\n};\n\nconst searchMoviesIDcredits = id => {\n  return axios\n    .get('/movie/' + id + '/credits', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.cast);\n};\n\nconst searchMoviesIDreviews = id => {\n  return axios\n    .get('/movie/' + id + '/reviews', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst moviesAPI = {\n  searchMoviesTrending,\n  searchMovies,\n  searchMoviesID,\n  searchMoviesIDcredits,\n  searchMoviesIDreviews,\n};\n\nexport default moviesAPI;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Reviews","movieId","useParams","useState","movieReviews","setMovieReviews","error","setError","useEffect","fetchMovieReviews","moviesAPI","response","length","content","axios","API_KEY","searchMoviesTrending","params","api_key","then","data","results","searchMovies","query","searchMoviesID","id","searchMoviesIDcredits","cast","searchMoviesIDreviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}