{"version":3,"file":"static/js/73.d50c12b3.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.js","services/movies-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap; /* чтобы элементы переносились на новую строку, если ширина экрана меньше, чем ширина всех элементов списка вместе взятых */\n`;\n\nexport const CastLi = styled.li`\n  width: 100px; /* фиксированная ширина элемента списка */\n  margin-right: 10px; /* отступ между элементами списка */\n  text-align: center; /* выравнивание текста по центру */\n`;\n\nexport const CastImg = styled.img`\n  display: block; /* чтобы изображения не имели отступа снизу */\n  margin: 0 auto; /* центрирование изображений */\n  width: 100px;\n  height: 150px;\n`;\n\nexport const CastP = styled.p`\n  margin: 5px 0 0; /* отступы для текста */\n  font-size: 12px; /* размер шрифта для текста */\n`;\n","import { useState, useEffect, memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesAPI from '../../services/movies-api';\nimport { CastUl, CastLi, CastImg, CastP } from './Cast.styled';\nimport img from '../../img/no_name.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const response = await moviesAPI.searchMoviesIDcredits(movieId);\n        setMovieCast(response);\n      } catch (error) {\n        setError('Ошибка при получении актерского состава');\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  console.log(movieCast);\n\n  return (\n    <>\n      <CastUl>\n        {movieCast.slice(0, 10).map(movie => (\n          <CastLi key={movie.id}>\n            {movie.profile_path ? (\n              <CastImg\n                src={`https://image.tmdb.org/t/p/w300/${movie.profile_path}`}\n                alt={movie.id}\n              />\n            ) : (\n              <CastImg src={`${img}`} alt={movie.name} />\n            )}\n\n            <CastP>{movie.name}</CastP>\n          </CastLi>\n        ))}\n      </CastUl>\n    </>\n  );\n};\n\nexport default memo(Cast);\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09e88d7dd6157842e835fc31a8c547c7';\n\nconst searchMoviesTrending = () => {\n  return axios\n    .get('/trending/movie/week', {\n      params: {\n        api_key: API_KEY,\n        language: 'uk',\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst searchMovies = query => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst searchMoviesID = id => {\n  return axios\n    .get('/movie/' + id, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data);\n};\n\nconst searchMoviesIDcredits = id => {\n  return axios\n    .get('/movie/' + id + '/credits', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.cast);\n};\n\nconst searchMoviesIDreviews = id => {\n  return axios\n    .get('/movie/' + id + '/reviews', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst searchMovieTrailer = movieId => {\n  return axios\n    .get(`/movie/${movieId}/videos`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    })\n    .then(response => {\n      const videoResults = response.data.results;\n      const trailer = videoResults.find(video => video.type === 'Trailer');\n      if (trailer) {\n        return `https://www.youtube.com/watch?v=${trailer.key}`;\n      }\n      return null;\n    });\n};\n\nconst moviesAPI = {\n  searchMoviesTrending,\n  searchMovies,\n  searchMoviesID,\n  searchMoviesIDcredits,\n  searchMoviesIDreviews,\n  searchMovieTrailer,\n};\n\nexport default moviesAPI;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["CastUl","styled","CastLi","CastImg","CastP","Cast","movieId","useParams","useState","movieCast","setMovieCast","error","setError","useEffect","fetchMovieCast","moviesAPI","response","console","log","slice","map","movie","profile_path","src","alt","id","img","name","memo","axios","API_KEY","searchMoviesTrending","params","api_key","language","then","data","results","searchMovies","query","searchMoviesID","searchMoviesIDcredits","cast","searchMoviesIDreviews","searchMovieTrailer","trailer","find","video","type","key","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}