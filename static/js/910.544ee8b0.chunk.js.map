{"version":3,"file":"static/js/910.544ee8b0.chunk.js","mappings":"yNAIMA,EAAO,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6GAEIC,EAAAA,EAAAA,sBAAgCT,GAFpC,OAEbU,EAFa,OAGnBN,EAAaM,GAHM,gDAKnBJ,EAAS,0NALU,yDAAH,qDASpBE,GACD,GAAE,CAACR,IAEAK,GACK,yBAAMA,KAIb,iCACE,oCAAYL,MAEZ,eAAIW,MAAO,CAAEC,QAAS,QAAtB,SACGT,EAAUU,MAAM,EAAG,IAAIC,KAAI,SAAAC,GAAK,OAC/B,2BACE,gBACEC,IAAG,0CAAqCD,EAAME,cAC9CC,IAAKH,EAAMI,GACXC,MAAM,UAER,uBAAIL,EAAMM,SANHN,EAAMI,GADgB,QAaxC,EAED,WAAeG,EAAAA,EAAAA,MAAKvB,E,mCC5CpBwB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAqDVf,EAAY,CAChBgB,qBApD2B,WAC3B,OAAOF,EAAAA,EAAAA,IACA,uBAAwB,CAC3BG,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAlB,GAAQ,OAAIA,EAASmB,KAAKC,OAAlB,GACjB,EA6CCC,aA3CmB,SAAAC,GACnB,OAAOT,EAAAA,EAAAA,IACA,gBAAiB,CACpBG,OAAQ,CACNC,QAASH,EACTQ,MAAOA,KAGVJ,MAAK,SAAAlB,GAAQ,OAAIA,EAASmB,KAAKC,OAAlB,GACjB,EAmCCG,eAjCqB,SAAAd,GACrB,OAAOI,EAAAA,EAAAA,IACA,UAAYJ,EAAI,CACnBO,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAlB,GAAQ,OAAIA,EAASmB,IAAb,GACjB,EA0BCK,sBAxB4B,SAAAf,GAC5B,OAAOI,EAAAA,EAAAA,IACA,UAAYJ,EAAK,WAAY,CAChCO,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAlB,GAAQ,OAAIA,EAASmB,KAAKM,IAAlB,GACjB,EAiBCC,sBAf4B,SAAAjB,GAC5B,OAAOI,EAAAA,EAAAA,IACA,UAAYJ,EAAK,WAAY,CAChCO,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAlB,GAAQ,OAAIA,EAASmB,KAAKC,OAAlB,GACjB,GAUD,K,sBChEA,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOzC,GAEP,YADAmC,EAAOnC,EAET,CACIwC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOlB,KAAKa,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/Cast.js","services/movies-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect, memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesAPI from '../services/movies-api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const response = await moviesAPI.searchMoviesIDcredits(movieId);\n        setMovieCast(response);\n      } catch (error) {\n        setError('Ошибка при получении актерского состава');\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <>\n      <div>Cast: {movieId}</div>\n\n      <ul style={{ display: 'flex' }}>\n        {movieCast.slice(0, 10).map(movie => (\n          <li key={movie.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w300/${movie.profile_path}`}\n              alt={movie.id}\n              width=\"60px\"\n            />\n            <p>{movie.name}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default memo(Cast);\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09e88d7dd6157842e835fc31a8c547c7';\n\nconst searchMoviesTrending = () => {\n  return axios\n    .get('/trending/movie/week', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst searchMovies = query => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst searchMoviesID = id => {\n  return axios\n    .get('/movie/' + id, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data);\n};\n\nconst searchMoviesIDcredits = id => {\n  return axios\n    .get('/movie/' + id + '/credits', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.cast);\n};\n\nconst searchMoviesIDreviews = id => {\n  return axios\n    .get('/movie/' + id + '/reviews', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst moviesAPI = {\n  searchMoviesTrending,\n  searchMovies,\n  searchMoviesID,\n  searchMoviesIDcredits,\n  searchMoviesIDreviews,\n};\n\nexport default moviesAPI;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Cast","movieId","useParams","useState","movieCast","setMovieCast","error","setError","useEffect","fetchMovieCast","moviesAPI","response","style","display","slice","map","movie","src","profile_path","alt","id","width","name","memo","axios","API_KEY","searchMoviesTrending","params","api_key","then","data","results","searchMovies","query","searchMoviesID","searchMoviesIDcredits","cast","searchMoviesIDreviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}