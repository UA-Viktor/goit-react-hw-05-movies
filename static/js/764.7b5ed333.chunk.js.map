{"version":3,"file":"static/js/764.7b5ed333.chunk.js","mappings":"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","sources":["pages/Movies.js","services/movies-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect, useRef, memo } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport moviesAPI from '../services/movies-api';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({ query: '' });\n  const [searchQuery, setSearchQuery] = useState(\n    searchParams.get('query') || ''\n  );\n  const searchQueryRef = useRef('');\n\n  useEffect(() => {\n    searchQueryRef.current = searchQuery;\n  }, [searchQuery]);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await moviesAPI.searchMovies(searchQueryRef.current);\n        setMovies(response);\n        setSearchQuery('');\n      } catch (error) {\n        setError('Ошибка при получении информации о фильме');\n      }\n    };\n    fetchMovie();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery });\n    moviesAPI.searchMovies(searchQuery).then(res => setMovies(res));\n    setSearchQuery('');\n  };\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setSearchQuery(value);\n  };\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={searchQuery} onChange={handleInputChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default memo(Movies);\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09e88d7dd6157842e835fc31a8c547c7';\n\nconst searchMoviesTrending = () => {\n  return axios\n    .get('/trending/movie/week', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst searchMovies = query => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst searchMoviesID = id => {\n  return axios\n    .get('/movie/' + id, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data);\n};\n\nconst searchMoviesIDcredits = id => {\n  return axios\n    .get('/movie/' + id + '/credits', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.cast);\n};\n\nconst searchMoviesIDreviews = id => {\n  return axios\n    .get('/movie/' + id + '/reviews', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nconst moviesAPI = {\n  searchMoviesTrending,\n  searchMovies,\n  searchMoviesID,\n  searchMoviesIDcredits,\n  searchMoviesIDreviews,\n};\n\nexport default moviesAPI;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Movies","location","useLocation","useState","movies","setMovies","error","setError","useSearchParams","query","searchParams","setSearchParams","get","searchQuery","setSearchQuery","searchQueryRef","useRef","useEffect","current","fetchMovie","moviesAPI","response","onSubmit","e","preventDefault","then","res","type","value","onChange","target","map","movie","to","id","state","from","title","memo","axios","API_KEY","searchMoviesTrending","params","api_key","data","results","searchMovies","searchMoviesID","searchMoviesIDcredits","cast","searchMoviesIDreviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}